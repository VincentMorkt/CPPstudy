/*Разработайте структуру по имени car, которая будет хранить следующую информацию об автомобиле: название производителя в виде строки в символьном массиве или в объекте string, 
а также год выпуска автомобиля в виде целого числа. Напишите программу, которая запросит пользователя, сколько автомобилей необходимо включить в каталог.
Затем программа должна применить new для создания динамического массива структур car указанного пользователем размера. 
Далее она должна пригласить пользователя ввести название производителя и год выпуска для наполнения данными каждой структуры в массиве (см. главу 4).
И, наконец, она должна отобразить содержимое каждой структуры. Пример запуска программы должен выглядеть подобно следующему:

Сколько автомобилей поместить в каталог? 2
Автомобиль #1:
Введите производителя: Hudson Hornet
Укажите год выпуска: 1952
Автомобиль #2:
Введите производителя: Kaiser
Укажите год выпуска: 1951
Вот ваша коллекция:
1952 Hudson Hornet
1951 кaiser
*/

#include <iostream>
#include <string>
struct car          // объявление структуры
{
    std::string manufacturer;   // члены структуры: переменная string 
    int yearIssue;              // переменная int
};
int main ()         
{
    using namespace std;
    cout <<"How many cars to put in the catalog? ";
    int num = 0;    
    cin >> num; // ввод значения, отражающего количество автомобилей. Значение будет использовано для задания количества элементов динамического массива структур и количества выполнений циклов ввода и отображения
    cin.get();  // отсечение ввода символа новой строки, который остаётся в потоке после использования cin << ... ;    
    car*collection = new car [num]; // объявление динамического массива структур 
    for (int i = 0; i < num ; i++)  // объявление цикла для ввода значений
    {
        cout << "Automobile #" << i+1 <<endl;   // вывод строки, отражающей порядковый номер автомобиля 
        cout << "Enter manufacturer: ";         
        getline(cin,collection[i].manufacturer);// ввод и запись значения в переменную manufactur структуры collection[i] типа car. Использована функция getline() 
        cout << "Enter year of issue: ";        // для возможности ввода строк, содержащих пробелы, c записью в переменную string
        cin >> collection[i].yearIssue;         // ввод и запись значения в переменную yearIssue структуры collection[i]
        cin.get();                              
    };                                          // завершение цикла ввода
    cout << "\nHere is your collection:\n";
    for (int i = 0; i < num; i++)               // объявление цикла для вывода значений, введённых ранее
        cout << collection[i].yearIssue <<" " << collection[i].manufacturer <<endl; // вывод на экран содержания массива структур, содержащего введённые ранее значения. Цикл состоит из одного оператора. 
    delete [] collection;   // Освобождение памяти, занимаемой динамическим массивом структур
    cin.get();  
    return 0;
}