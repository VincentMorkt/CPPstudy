/*1. Напишите программу, которая читает клавиатурный ввод до символа @ и повторяет его, за исключением десятичных цифр, 
преобразуя каждую букву верхнего регистра в букву нижнего регистра и наоборот. (Не забудьте о семействе функций cctype.) */
#include <iostream>
#include <cctype>   // подключение заголовочного файла библиотеки символьных функций

int main ()
{
    using namespace std;
    cout << "This program will destroy all your numbers and reverse the registers.\n"
    "Enter your data, ending with @:\n";
    char ch; 
    while (cin.get(ch) && ch != '@')    /* проверочное условие (успешность ввода И ввод НЕ_РАВЕН предопределённому символу завершения ввода '@'). 
        Побочный эффект cin.get(ch) - присвоение переменной ch значения из очереди ввода. 
        В данном случае не обязательно распологать метод cin.get(ch) в проверочном условии, так как ввод емулации EOF не предполагается, 
        а переменная типа char без ошибок примет вводимые символы. Но это удобно с точки зрения оптимизации кода. Иначе пришлось бы вписать 
        оператор cin.get(ch); в трёх местах вместо одного (перед циклом, в пермов if перед continue; и в конце цикла)*/
    {
        if (isdigit(ch) != 0)   // если (символьная функция cctype обнаруживает цифру) 
        continue;               // начать новый цикл
        if (islower(ch))        // если (символьная функция обнаруживает буквенный символ в нижнем регистре)        
        ch = toupper(ch);       // присвоить переменной ch возврат функции, возвращающей символы в верхнем регистре, если аргументом является символ в нижнем регистре
        else if (isupper(ch))   // иначе если (символьная функция обнаруживает буквенный символ в верхнем регистре)
        ch = tolower(ch);       // присвоить переменной ch возврат функции, возвращающей символы в нижнем регистре, если аргументом является символ в верхнем регистре
        cout << ch;             // вывести ch на экран. ch может содержать преобразованный буквенный символ или любой другой символ (пробельный, знак препинания), кроме цифры
        if (ch == '\n')         // если ch содержит символ переноса строки (что свидетельствует об отсутствии ввода предопределённого символа завершения ввода '@') 
        cout << "Cammon, what did I say about the ending?!\n"   // вывести строковую константу, напоминающую о корректном завершении ввода
        "Try again:\n";
    }
    cin.get();  // при вводе '@' цикл прервётся и последний символ переноса строки останется в очереди ввода. Метод cin.get() отсекает этот символ 
    cout << "\nThat`s all. Press <ENTER> to close.";
    cin.get();  // ожидание ввода любого символа для просмотра результатов работы программы
    return 0; 
}

