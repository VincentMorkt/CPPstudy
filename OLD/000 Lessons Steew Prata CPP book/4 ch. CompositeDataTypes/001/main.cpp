/*Напишите программу С++, которая запрашивает и отображает информацию, как показано в следующем примере вывода:
What is your first name? Betty Sue
What is your last name? Yewe
What letter grade do you deserve? В
What is your age? 22
Name: Yewe, Betty Sue
Grade: С
Age: 22
Обратите внимание, что программа должна принимать имена, состоящие из более чем одного слова. Кроме того, программа должна уменьшать значение
grade на одну градацию - т.е. на одну букву выше. Предполагается, что пользователь может ввести А, В или С, поэтому вам не нужно беспокоиться 
о пропуске между D и F.*/

#include <iostream> // подключение заголовочного файла стандартного ввода-вывода
int main ()         // объявление функции main
{
    using namespace std;    // подключение пространства имён std
    const int Num = 20;     // объявление и инициализация константы int, которая будет использована для задания размеров массивов. Такой подход применяется для предотвращения ошибок при разработке
    cout << "What is your first name? "; // вывод строкового литерала на экран
    char firstName [Num];   // объявление массива firstName из значений типа char в количестве, заданным константой Num
    cin.getline(firstName,Num); // ввод строкового литерала с клавиатуры с записью в массив firstName с использованием функции члена cin.getline(имя_целевого_массива,количество_символов)
                                // .getline принимает пробелы, использует enter для обозначения конца ввода и создания нулевого символа. может быть введено (количество_символов - 1) символов. 
                                // Последний элемент массива зарезервирован для нулевого символа '\0'
                                // При вводе избыточных символов отправляет их в очередь ввода и устанавливает failbit, блокирующий ввод
                                // Допускает пустой ввод
    cin.clear();    // вызов функции члена, снимающей failbit
    cout << "What is your last name? ";
    char lastName [Num];     
    cin.get(lastName,Num).clear();// ввод строкового литерала с клавиатуры с записью в массив lastName[] с использованием функции члена cin.get(имя_целевого_массива,количество_символов).get 
                                // в конце строки использована конкатенация функций-членов .get() для отсечения ввода символа переноса строки (Enter), который функция .get оставляет в очереди ввода.
                                // .get (name,n) также принимает пробелы и использует enter для обозначения конца ввода и создания нулевого символа. может быть введено (количество_символов - 1) символов. 
                                // Последний элемент массива зарезервирован для нулевого символа '\0'
                                // При вводе избыточных символов отправляет их в очередь ввода
                                // При вводе пустой строки устанавливает failbit
    
    cout << "What letter grade do you deserve? ";
    char letterGrade = ' '; // объявление переменной типа char с именем letterGrade и преинициализация её значением ' ' (пробел) 
                            // преинициализация сделана для предотрвращения вывода на экран мусора при вводе пустого значения (отсутствии напечатанного символа и нажатии Enter) с клавиатуры
    cin >> letterGrade;     // ввод значения с клавиатуры с записью в переменную letterGrade
    cout << "What is your age? ";
    int age = 0;            // объявление переменной типа int с именем age
    cin >> age;             // ввод значения с клавиатуры с записью в переменную age
    cin.get();              // испльзование функции члена сin.get для отсечения ввода символа переноса строки (Enter), остающегося в потоке после оператора cin >>
    cout << "Name: " <<lastName <<", " <<firstName <<endl // вывод на экран текстовых констант и строк, записанных в массивах char lastName firstName[] и firstName[]
    <<"Grade: " <<char(letterGrade+1) <<endl// вывод на экран текстовой константы и выражения, состоящего из приведение_к_char(letterGrade+1)
                                            // Приведение к типу необходимо, поскольку в выражении char будет преобразован в int
                                            // Задание предполагает использование в выражении стандартной кодировки ASCII, хотя такой подход похож на костыль
    <<"Age: " <<age <<endl; 
    cin.get();  // вызов функции члена сin.get для приостановки выполнения программы и просмотра результата до ввода символа переноса строки (Enter)
    return 0;   // оператор возврата
}


