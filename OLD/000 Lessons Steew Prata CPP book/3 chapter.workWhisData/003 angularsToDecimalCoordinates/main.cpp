/*Напишите программу, которая запрашивает широту в градусах, минутах и секундах, после чего отображает широту в десятичном формате. 
В одной минуте 60 угловых секунд, а в одном градусе 60 угловых минут; Представьте эти значения с помощью символических констант. 
Для каждого вводимого значения должна использоваться отдельная переменная. Результат выполнения программы согластно ТЗ (в учебнике)*/

#include <iostream>     // дирректива подключения заголовочного файла стандартного ввода-вывода
int main ()             // объявление функции main  
{
    using namespace std;    // подключение пространства имён std
    cout << "Enter a latitude in degrees, minutes, and seconds:\n"  
    << "First, enter the degrees: ";    // вывод строки символов на экран. один оператор записан в двух строках кода для наглядности
    int degrees = 0;    // объявление переменной. Использован тип int, поскольку ввод должен представлять собой целое число. Это сделано с целью защиты от ошибок (подробнее далее)
                        // (также использование типа int экономит память, но это неактуально для программ такого размера)
    cin >> degrees;     // инициализация переменной вводимым значением
    cout << "Next, enter the minutes of arc: "; // вывод строки символов на экран
    int minutes = 0;    // объявление переменной
    cin >> minutes;     // инициализация переменной вводимым значением
    cout << "Finally, enter the seconds of arc: ";  // вывод строки символов на экран
    int seconds = 0;    // объявление переменной. Теоретически секунды могут быть записаны со специфической дробной частью, которая представляет милисекунды и микросекунды.
                        // однако такая запись не является десятичной дробью, поэтому любая дробная часть будет отброшена при преобразовании значения в int.
    cin >> seconds;     // инициализация переменной вводимым значением 
    const double SecundsInMinute = 60;  // объявление и инициализация константы. Использован тип double, поскольку константа в выражении будет выступать знаменателем,
    const double MinutesInDegees = 60;  // в то время как числителем будет значение с типом int. Если константа будет иметь целочисленный тип, то числитель и результат
                                        // не будут преобразованы в тип с плавающей точкой, и результат деления будет некорректным. 
    cout << degrees <<" degrees, " << minutes << " minutes, " << int(seconds) << " seconds = "  // вывод строки символов и значений переменных на экран
    << degrees+minutes/MinutesInDegees+seconds/SecundsInMinute/MinutesInDegees << " degrees";   // продолжение предыдущего оператора, вывод на экран результата выражения
    cin.get();          // использование функции-члена .get() - ожидание ввода любого символа, для приостановки выполнения программы и просмотра результата
    cin.get();
    return 0;           // оператор возврата
}