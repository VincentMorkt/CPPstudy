// 4. Выполните упражнение 4 из главы 9, но преобразуйте структуру Sales и ассоциированные с ней функции в класс и методы.
// Замените функцию setSales(Sales &, double[], int) конструктором. Реализуйте интерактивный метод setSales(Sales &), используя конструктор.
// Оставьте класс в пространстве имен SALES.

// 4. Напишите программу, включающую три файла и использующую следующее пространство имен

// Первый файл должен быть заголовочным и содержать пространство имен.
// Второй файл должен содержать исходный код и расширять пространство имен, предоставляя определения трех прототипированных функций.
// В третьем файле должны объявляться два объекта Sales.
// Он должен использовать интерактивную версию функции setSales() для предоставления значений первой структуре
// и неинтерактивную версию той же функции для предоставления значений второй структуре.
// Он также должен отображать содержимое обеих структур с помощью функции showSales ().

// main.cpp -- программа демонстратор

#include <iostream>
#include "sales.h"

int main()
{
    using namespace SALES;
    using namespace std;
    Sales var[2];                      // создание массива объектов класса
    cout << "Uninteractive method:\n"; // неинтерактивный метод
    double values[QUARTERS] = {3.2,    // создание массива данных для инициализации
                               5.4,
                               1.1,
                               0.2};
    var[0].setSales(values); // вызов неинтерактивного метода
    var[0].showSales();      // просмотр результата работы этого метода

    cout << "Interactive method:\n"; // интерактивный метод
    var[1].setSales();               // вызов интерактивного метода
    var[1].showSales();              // просмотр результата его работы
    cin.get();

    return 0;
}