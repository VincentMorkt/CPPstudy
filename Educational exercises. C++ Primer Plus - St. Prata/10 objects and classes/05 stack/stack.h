// 5. Пусть имеется следующее объявление структуры:
struct customer
{
    char fullname[35];
    double payment;
};
// Напишите программу, которая будет добавлять структуры заказчиков в стек и удалять их из стека, представленного объявлением класса Stack.
// Всякий раз, когда заказчик удаляется из стека, его зарплата должна добавляться к промежуточной сумме и по этой сумме выдаваться отчет.
// На заметку: вы должны иметь возможность пользоваться классом Stack без изменений;
// просто поменяйте объявление typedef, чтобы Item был типом customer вместо unsigned long.

// stack.h -- объявление класса для АТД стека

#ifndef STACK_H_
#define STACK_H_

typedef customer Item;
class Stack
{
private:
    enum
    {
        MAX = 10 // константа-перечислитель, специфичная целочисленная константа для класса
    };
    Item items[MAX]; // массив элементов стека
    int top;         // индекс вершины стека

public:
    Stack();
    bool isempty() const;
    bool isfull() const;
    bool push(const Item &item); // добавляет елемент в стек вовзращает false, если стак полон
    bool pop(Item &item);        // выталкивает елемент с вершины стека
};
#endif
