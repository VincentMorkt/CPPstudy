// 4. Имеется следующий вариант класса Stack, определенного в листинге 10.10:
// Как понятно из закрытых членов, данный класс использует динамически выделенный массив для хранения элементов стека.
// Перепишите методы для соответствия новому представлению и напишите программу, которая демонстрирует работу
// всех методов, включая конструктор копирования и операцию присваивания.

// stack.h -- объявление класса Stack

#ifndef STACK_H_
#define STACK_H_

typedef unsigned long Item;

class Stack
{
private:
    enum
    {
        MAX = 10 // константа, специфичная для класса
    };
    Item *pitems; // хранит элементы стека
    int size;     // количество элементов в стеке
    int top;      // индекс для верхнего элемента стека

public:
    Stack(int n = 10); // создает стек с n элементами
    Stack(const Stack &st);
    ~Stack();
    bool isempty() const;
    bool isfull() const;
    bool push(const Item &item); // возвращает значение false, если стек уже полный, и true в противном случае
    bool pop(Item &item);        // возвращает значение false , если стек уже пустой, и true в противном случае
    Stack &operator=(const Stack &st);
};

#endif