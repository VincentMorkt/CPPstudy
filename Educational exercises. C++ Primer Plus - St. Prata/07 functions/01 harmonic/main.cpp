/* Напишите программу, которая многократно запрашивает у пользователя пару чисел до тех пор, пока хотя бы одно из этой пары не будет равно 0.
С каждой парой программа должна использовать функцию для вычисления среднего гармонического этих чисел. Функция должна возвращать ответ main () для отображения результата.
Среднее гармоническое чисел - это инверсия среднего значения их инверсий; она вычисляется следующим образом:
среднее гармоническое = 2.О*х*у/(х+у)
*/
#include <iostream>
double FunctHarmonicMean(double x, double y); // прототип функции

int main()
{
    using namespace std;
    int x = 0, y = 0;
    double harmonicMean = 0; // объявление необходимых переменных
    while (true)             // проверки для продолжения или завершения цикла происходят в теле цикла
    {
        cout << "Enter two values (one of value = 0 to exit): \n";
        cin >> x >> y; // ввод значений
        if (!cin)      // проверка корректности ввода
        {
            cin.clear();              // очистка failbit
            while (cin.get() != '\n') // очистка потока ввода
                continue;
            cout << "Bad input. Enter numbers.\n\n"; // сообщение об ошибке
            continue;                                // рестарт цикла
        }
        if (x == 0 || y == 0) // проверка условия завершения
        {
            while (cin.get() != '\n') // очистка потока ввода
                continue;
            break; // остановка цикла
        }
        while (cin.get() != '\n') // очистка потока ввода (на случай наличия сторонних символов и пробелов в потоке после двух корректных значений)
            continue;
        harmonicMean = FunctHarmonicMean(x, y);            // вызов функции
        cout << "Harmonic Mean = " << harmonicMean << endl // вывод значения
             << endl;
    }

    cout << "\nPress <ENTER> to close."; // закрытие программы
    cin.get();                           // ожидание ввода для просмотра результатов работы программы
    return 0;
}
double FunctHarmonicMean(double x, double y) // объявление функции
{
    return 2.0 * x * y / (x + y); // оператор возврата возвращает значение в соответсвии с ТЗ
}