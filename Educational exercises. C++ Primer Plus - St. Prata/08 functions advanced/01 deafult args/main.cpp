// 1. Напишите функцию, которая обычно принимает один аргумент - адрес строки и выводит эту строку один раз. Однако если задан второй аргумент типа int,
// не равный нулю, то эта функция выводит строку столько раз, сколько было осуществлено вызовов этой функции к моменту ее данного вызова.
// (Обратите внимание, что количество выводимых строк не равно значению второго аргумента, оно равно числу вызовов функции к моменту последнего вызова.)
// Действительно, это не слишком полезная функция, но она заставит применить некоторые из методов, рассмотренных в данной главе.
// Напишите простую программу для демонстрации этой функции.
#include <iostream>
int i = 0; // переменная счётчика в глобальном пространстве
void MyFunct(const char *ch, int num = 0);

// чтобы выполнить эту задачу нам необходима передача информации о количестве вызовов функций между этими вызовами.
// Для этого необходимо либо объявить внешнюю переменную в глобальном пространстве, либо каждый раз передавать ссылку на счётчик через аргумент.

int main()
{
    using namespace std;
    MyFunct("First function call");
    const char *ch0 = {"Second function call"};
    MyFunct(ch0);
    const char *ch1 = {"Third function call whis number in arguments"}; // выведет указанную строку трижды. Все остальные вызовы выводят строки по одному разу.
    MyFunct(ch1, 19);
    MyFunct("Fourth function call whis 0 in arguments", 0);
    cin.get();
    return 0;
}

void MyFunct(const char *ch, int num) // объявление функции. Два аргумента, один из которых имеет значение по умолчанию 0, что лучше всего подходит под ТЗ.
{
    i++; // счётчик вызовов
    int j = 0;
    do  // применение цикла do while гарантирует одно его выполнение независимо от условия
    {
        std::cout << ch << std::endl;   
        j++;
    } while (j < i && num); // цикл продолжается, если количество проходов цикла меньше количества вызовов функции, и если задан ненулевой аргумент num.
}