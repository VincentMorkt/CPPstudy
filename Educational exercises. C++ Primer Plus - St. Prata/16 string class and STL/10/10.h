// 10. Измените код в листинге 1 6.9 (vect3.cpp) следующим образом.
// а. Добавьте член price в структуру Review.
// б. Для хранения вводимых данных используйте вектор (vector) объектов
// shared_ptr<Review> вместо вектора объектов Review. Помните, что
// shared_ptr должен быть инициализирован указателем, возвращенным операцией new.
// в. Вслед за этапом ввода данных реализуйте цикл, который предоставляет 
// пользователю следующие варианты отображения книг: в исходном порядке, 
// в алфавитном порядке, в порядке возрастания рейтинга, в порядке возрастания
// цены, в порядке уменьшения цены и возможность завершения программы.

// Один из возможных подходов может быть таким. После получения первоначальных 
// введенных данных создайте еще один вектор указателей shared_ptr,
// инициализированный исходным массивом. Определите функцию operator<(),
// которая сравнивает указанные структуры, и примените ее для сортировки 
// второго вектора так, чтобы shared_ptr были упорядочены по названиям книг, 
// сохраненных в указанных объектах. Повторите процесс, чтобы получить вектор
// объектов shared_ptr, отсортированных по rating и price. Обратите внимание, 
// что rbegin() и rend() избавляют от необходимости создания векторов с
// обратным порядком следования элементов.